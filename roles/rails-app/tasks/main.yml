---
- name: App user
  user:
    name: "{{ rails_app_name }}"
    state: present
    system: yes

- name: Deploy group
  group:
    name: deploy
    state: present

- name: Allow deploy group to sudo
  copy:
    src: deploy_sudo
    dest: /etc/sudoers.d/deploy
    owner: root
    group: root
    mode: 0440
    validate: visudo -cf %s

- name: Vagrant user in deploy group
  user:
    name: vagrant
    groups: deploy
    append: yes
  when: running_in_vagrant == true

- name: Deployment directory
  file:
    path: /srv/{{ rails_app_name }}
    state: directory
    owner: "{{ rails_app_name }}"
    group: deploy
    mode: 0o6775
- name: Config directory
  file:
    path: /srv/{{ rails_app_name }}/shared/config/credentials
    state: directory
    owner: "{{ rails_app_name }}"
    group: deploy
    mode: 0o6775

- name: Production key presence
  stat:
    path: /srv/{{ rails_app_name }}/shared/config/credentials/production.key
  register: production_key_stat
- name: Read production key
  become: false
  local_action:
    module: hasnimehdi91.keepass.secret_reader
    db_path: "{{ password_database_file }}"
    db_password: "{{ password_database_password }}"
    secret_path: "{{ rails_production_key_kp_path }}"
  register: production_key_secret
  when: production_key_stat.stat.exists == false
- name: Production key
  copy:
    dest: /srv/{{ rails_app_name }}/shared/config/credentials/production.key
    content: "{{ production_key_secret.secret['production.key'].password }}"
    owner: "{{ rails_app_name }}"
    group: deploy
    mode: 0o660
  when: production_key_stat.stat.exists == false

- name: Database config presence
  stat:
    path: /srv/{{ rails_app_name }}/shared/config/database.yml
  register: database_config_stat
- name: Read database password
  become: false
  local_action:
    module: hasnimehdi91.keepass.secret_reader
    db_path: "{{ password_database_file }}"
    db_password: "{{ password_database_password }}"
    secret_path: "{{ rails_database.password_kp_path }}"
  register: database_password_secret
  when: >
    database_config_stat.stat.exists == false
    and not rails_database.password is defined
- name: Database configuration
  template:
    src: database.yml.j2
    dest: /srv/{{ rails_app_name }}/shared/config/database.yml
    owner: "{{ rails_app_name }}"
    group: deploy
    mode: 0o660
  when: database_config_stat.stat.exists == false

- include_tasks: sidekiq.yml
  when: rails_needs_sidekiq == true
